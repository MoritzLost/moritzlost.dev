---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '@layouts/BaseLayout.astro';
import TableOfContents from '@components/TableOfContents.astro';
import Emoji from '@components/Emoji.astro';
import Time from '@components/Time.astro';
import { sortArticlesByDatePrefix } from '@utils/sort-content';
import { render } from 'astro:content';

interface Props {
    article: CollectionEntry<'articles'>;
    articles: Array<CollectionEntry<'articles'>>;
}

export async function getStaticPaths() {
    const articles = await getCollection('articles');
    const articlesSorted = sortArticlesByDatePrefix(articles);
    return articles.map(article => ({
        params: { article: article.id },
        props: { article, articles: articlesSorted },
    }));
}

// const { article, articles } = Astro.props;
const { article } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await render(article);

const fileHistoryUrl = `https://github.com/MoritzLost/moritzlost.de/commits/main/${article.filePath}`;
const editUrl = `https://github.com/MoritzLost/moritzlost.de/edit/main/${article.filePath}`;

const publishedDate = new Date(remarkPluginFrontmatter.publishedDate);
const hasRevisionHistory = remarkPluginFrontmatter.revisionHistory.length > 1;
const lastRevision = hasRevisionHistory && remarkPluginFrontmatter.revisionHistory[0];
---

<BaseLayout title={article.data.title}>
    <div class="article-layout">
        <div class="article-layout__header">
            <h1>{article.data.title}</h1>
            <p class="subline-author">
                — by Moritz L'Hoest
                <span class="subline-divider" aria-hidden="true">·</span>
                <Time date={publishedDate} />
            </p>
        </div>

        <aside class="article-layout__aside">
            <TableOfContents {headings} />
        </aside>

        <div class="article-layout__content stack">
            <Content />

            <footer class="article-footer stack">
                <hr />
                {
                    article.data.disclaimerNoAI && (
                        <p class="no-ai-disclaimer">
                            This article was written by a human without the involvement of AI.
                        </p>
                    )
                }

                <p class="article-meta">
                    <span><Emoji emoji="💡" /> Published on <Time date={publishedDate} /></span>
                    {
                        lastRevision && (
                            <span>
                                <Emoji emoji="✏️" /> Last edited on <Time date={new Date(lastRevision.date)} />
                            </span>
                        )
                    }
                    {
                        hasRevisionHistory && (
                            <span>
                                <Emoji emoji="🗂️" /> <a href={fileHistoryUrl}>View revision history</a>
                            </span>
                        )
                    }
                    <span><Emoji emoji="💡" /> <a href={editUrl}>Suggest an edit</a></span>
                </p>
            </footer>
        </div>
    </div>
</BaseLayout>

<style lang="postcss">
    .article-layout {
        display: grid;
        column-gap: 5rem;
        row-gap: 3rem;
        justify-content: center;
        grid-template-columns: minmax(0, 45rem);
        grid-template-areas: 'header' 'aside' 'content';

        > .article-layout__header {
            grid-area: header;
        }

        > .article-layout__aside {
            grid-area: aside;
        }

        > .article-layout__content {
            grid-area: content;
        }
    }

    @media (min-width: 65rem) {
        .article-layout {
            grid-template-columns: minmax(35rem, 45rem) 20rem;
            grid-template-areas: 'header aside' 'content aside';

        }

        .article-layout__aside {
            align-self: start;
            position: sticky;
            top: 3rem;
        }
    }

    .subline-author {
        --stack-gap: 0;
        font-size: var(--font-size-lg);
        font-family: var(--headings-font-family);
        font-weight: var(--headings-font-weight);
    }

    .subline-divider {
        padding-inline: .5rem;
    }

    .article-footer {
        margin-top: 5rem;
        font-size: var(--font-size-sm);
    }

    .no-ai-disclaimer {
        font-style: italic;
    }

    .article-meta {
        > * {
            display: block;
        }
        > * + * {
            margin-top: .5rem;
        }
    }

    .article-link {
        display: grid;
    }
</style>
